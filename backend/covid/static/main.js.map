{"version":3,"sources":["./projects/covid/src/app/covid-data.service.ts","./projects/covid/src/main.ts","./projects/covid/src/app/app.module.ts","./projects/covid/src/app/state.ts","./projects/covid/src/app/app.component.ts","./projects/covid/src/app/app.component.html","./projects/covid/src/environments/environment.ts","./projects/covid/src/app/dataQuery.ts","./projects/covid/src/app/data-query/data-query.component.ts","./projects/covid/src/app/data-query/data-query.component.html","./projects/covid/src/app/app-routing.module.ts","./projects/covid/$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { DailyDatum } from './daily-datum';\nimport { DataQuery } from './dataQuery';\nimport { State } from './state';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CovidDataService {\n\n  constructor(private http:HttpClient) { }\n\n  constructUrl(dataQuery: DataQuery) {\n    const base_url = \"http://localhost:8000/covid/data/?\"\n    var params = new HttpParams();\n    params = params.set(\"start\", dataQuery.start);\n    params = params.set(\"end\", dataQuery.end);\n    params = params.set(\"county\", dataQuery.county);\n    params = params.set(\"state\", dataQuery.state.name);\n    return base_url.concat(params.toString());\n  }\n\n  getData(dataQuery: DataQuery): Observable<DailyDatum[]> {\n    var url = this.constructUrl(dataQuery);\n    return this.http.get<DailyDatum[]>(url)\n  }\n\n  getStates(): Observable<State[]> {\n    var url = 'http://localhost:8000/covid/states/'\n    return this.http.get<State[]>(url);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DataQueryComponent } from './data-query/data-query.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DataQueryComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class State {\n\n  constructor(\n    public name: string,\n    public county_set: string[]\n  ) {  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'covid';\n}\n","<div class=\"container\">\n  <app-data-query></app-data-query>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { State } from './state';\n\nexport class DataQuery {\n\n  constructor(\n    public start: string,\n    public end: string,\n    public county: string,\n    public state: State,\n  ) {  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { DataQuery } from '../dataQuery';\nimport { DailyDatum } from '../daily-datum';\nimport { State } from '../state';\nimport { CovidDataService } from '../covid-data.service';\n\n@Component({\n  selector: 'app-data-query',\n  templateUrl: './data-query.component.html',\n  styleUrls: ['./data-query.component.sass']\n})\n\nexport class DataQueryComponent {\n\n  constructor(private http:HttpClient, private dataService: CovidDataService) { }\n\n  data: DailyDatum[] = [];\n  states: State[] = [];\n\n  ngOnInit() {\n    console.log('Init!');\n    console.log(this.state.county_set);\n    this.getStates();\n  }\n\n  county: string = \"\"\n  state: State = new State(\"Pennsylvania\", [this.county])\n  start = '2020-11-01'\n  end = '2020-11-10'\n\n  model = new DataQuery(this.start, this.end, this.county, this.state)\n\n  submitted = false;\n\n  getStates(): void {\n    this.dataService.getStates()\n      .subscribe(states => this.states = states);\n  }\n\n  getData(): void {\n    this.dataService.getData(this.model)\n      .subscribe(data => this.data = data);\n  }\n\n  onSubmit() {\n    this.getData();\n  }\n\n  // TODO: Remove this when we're done\n  get diagnostic() { return JSON.stringify(this.model); }\n}\n","<div class=\"form-group\">\n  <form (ngSubmit)=\"onSubmit()\" #dataQuery=\"ngForm\">\n    <label for=\"state\">State</label>\n    <select class=\"form-control\" id=\"state\" [(ngModel)]=\"model.state\" name=\"state\" required>\n      <option *ngFor=\"let state of states\" [ngValue]=\"state\">{{state.name}}</option>\n    </select>\n\n    <label for=\"county\">County</label>\n    <select class=\"form-control\" id=\"county\" [(ngModel)]=\"model.county\" name=\"county\">\n      <option *ngFor=\"let county of model.state.county_set\" [ngValue]=\"county\">{{county}}</option>\n    </select>\n\n    <label for=\"start\">Start Date</label>\n    <input class=\"form-control\" type=\"date\" id=\"start\" [(ngModel)]=\"model.start\" name=\"start\">\n\n    <label for=\"end\">End Date</label>\n    <input class=\"form-control\" type=\"date\" id=\"end\" [(ngModel)]=\"model.end\" name=\"end\">\n\n    <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!dataQuery.form.valid\">Submit</button>\n  </form>\n\n  <ul>\n    <li *ngFor=\"let datum of data\">{{datum.date}}: {{datum.case_count}}</li>\n  </ul>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"nl2k\";"],"sourceRoot":"webpack:///"}